/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20Token,
  ERC20TokenInterface,
} from "../../../contracts/mytoken.sol/ERC20Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AllowanceBelowZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
    ],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "UpdateDescriptionOnlyOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d6c38038062001d6c833981810160405281019062000037919062000384565b836000908162000048919062000675565b5082600190816200005a919062000675565b5081600260006101000a81548160ff021916908360ff16021790555033600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600581905550600554600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6005546040516200016691906200076d565b60405180910390a3505050506200078a565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620001e18262000196565b810181811067ffffffffffffffff82111715620002035762000202620001a7565b5b80604052505050565b60006200021862000178565b9050620002268282620001d6565b919050565b600067ffffffffffffffff821115620002495762000248620001a7565b5b620002548262000196565b9050602081019050919050565b60005b838110156200028157808201518184015260208101905062000264565b60008484015250505050565b6000620002a46200029e846200022b565b6200020c565b905082815260208101848484011115620002c357620002c262000191565b5b620002d084828562000261565b509392505050565b600082601f830112620002f057620002ef6200018c565b5b8151620003028482602086016200028d565b91505092915050565b600060ff82169050919050565b62000323816200030b565b81146200032f57600080fd5b50565b600081519050620003438162000318565b92915050565b6000819050919050565b6200035e8162000349565b81146200036a57600080fd5b50565b6000815190506200037e8162000353565b92915050565b60008060008060808587031215620003a157620003a062000182565b5b600085015167ffffffffffffffff811115620003c257620003c162000187565b5b620003d087828801620002d8565b945050602085015167ffffffffffffffff811115620003f457620003f362000187565b5b6200040287828801620002d8565b9350506040620004158782880162000332565b925050606062000428878288016200036d565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200048757607f821691505b6020821081036200049d576200049c6200043f565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620005077fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620004c8565b620005138683620004c8565b95508019841693508086168417925050509392505050565b6000819050919050565b600062000556620005506200054a8462000349565b6200052b565b62000349565b9050919050565b6000819050919050565b620005728362000535565b6200058a62000581826200055d565b848454620004d5565b825550505050565b600090565b620005a162000592565b620005ae81848462000567565b505050565b5b81811015620005d657620005ca60008262000597565b600181019050620005b4565b5050565b601f8211156200062557620005ef81620004a3565b620005fa84620004b8565b810160208510156200060a578190505b620006226200061985620004b8565b830182620005b3565b50505b505050565b600082821c905092915050565b60006200064a600019846008026200062a565b1980831691505092915050565b600062000665838362000637565b9150826002028217905092915050565b620006808262000434565b67ffffffffffffffff8111156200069c576200069b620001a7565b5b620006a882546200046e565b620006b5828285620005da565b600060209050601f831160018114620006ed5760008415620006d8578287015190505b620006e4858262000657565b86555062000754565b601f198416620006fd86620004a3565b60005b82811015620007275784890151825560018201915060208501945060208101905062000700565b8683101562000747578489015162000743601f89168262000637565b8355505b6001600288020188555050505b505050505050565b620007678162000349565b82525050565b60006020820190506200078460008301846200075c565b92915050565b6115d2806200079a6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c5780639dc29fac116100665780639dc29fac14610261578063a457c2d71461027d578063a9059cbb146102ad578063dd62ed3e146102dd576100ea565b806370a08231146101f55780638da5cb5b1461022557806395d89b4114610243576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806340c10f19146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f761030d565b6040516101049190611229565b60405180910390f35b610127600480360381019061012291906112e4565b61039b565b604051610134919061133f565b60405180910390f35b6101456103b2565b6040516101529190611369565b60405180910390f35b61017560048036038101906101709190611384565b6103bc565b604051610182919061133f565b60405180910390f35b61019361079e565b6040516101a091906113f3565b60405180910390f35b6101c360048036038101906101be91906112e4565b6107b1565b6040516101d0919061133f565b60405180910390f35b6101f360048036038101906101ee91906112e4565b61084f565b005b61020f600480360381019061020a919061140e565b610a2b565b60405161021c9190611369565b60405180910390f35b61022d610a74565b60405161023a919061144a565b60405180910390f35b61024b610a9a565b6040516102589190611229565b60405180910390f35b61027b600480360381019061027691906112e4565b610b28565b005b610297600480360381019061029291906112e4565b610d1d565b6040516102a4919061133f565b60405180910390f35b6102c760048036038101906102c291906112e4565b610e05565b6040516102d4919061133f565b60405180910390f35b6102f760048036038101906102f29190611465565b610e1c565b6040516103049190611369565b60405180910390f35b6000805461031a906114d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610346906114d4565b80156103935780601f1061036857610100808354040283529160200191610393565b820191906000526020600020905b81548152906001019060200180831161037657829003601f168201915b505050505081565b60006103a8338484610ea3565b6001905092915050565b6000600554905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361042e57826040517fc80b8834000000000000000000000000000000000000000000000000000000008152600401610425919061144a565b60405180910390fd5b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156104b257816040517f926653510000000000000000000000000000000000000000000000000000000081526004016104a99190611369565b60405180910390fd5b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156105ef57600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040517ff96fb0710000000000000000000000000000000000000000000000000000000081526004016105e69190611369565b60405180910390fd5b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461063e9190611534565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106949190611568565b9250508190555081600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546107279190611534565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161078b9190611369565b60405180910390a3600190509392505050565b600260009054906101000a900460ff1681565b6000610845338484600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108409190611568565b610ea3565b6001905092915050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146108e157336040517f0a86c02a0000000000000000000000000000000000000000000000000000000081526004016108d8919061144a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361095257816040517fc80b8834000000000000000000000000000000000000000000000000000000008152600401610949919061144a565b60405180910390fd5b80600560008282546109649190611568565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109ba9190611568565b925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610a1f9190611369565b60405180910390a35050565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054610aa7906114d4565b80601f0160208091040260200160405190810160405280929190818152602001828054610ad3906114d4565b8015610b205780601f10610af557610100808354040283529160200191610b20565b820191906000526020600020905b815481529060010190602001808311610b0357829003601f168201915b505050505081565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bba57336040517f0a86c02a000000000000000000000000000000000000000000000000000000008152600401610bb1919061144a565b60405180910390fd5b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610c4357816040517f92665351000000000000000000000000000000000000000000000000000000008152600401610c3a9190611369565b60405180910390fd5b8160056000828254610c559190611534565b9250508190555081600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cab9190611534565b92505081905550600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d109190611369565b60405180910390a3505050565b600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905080831115610de457826040517f97eff939000000000000000000000000000000000000000000000000000000008152600401610ddb9190611369565b60405180910390fd5b610dfa33858584610df59190611534565b610ea3565b600191505092915050565b6000610e12338484610f8e565b6001905092915050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92583604051610f819190611369565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610fff57816040517fc80b8834000000000000000000000000000000000000000000000000000000008152600401610ff6919061144a565b60405180910390fd5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561108357806040517f9266535100000000000000000000000000000000000000000000000000000000815260040161107a9190611369565b60405180910390fd5b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546110d29190611534565b9250508190555080600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546111289190611568565b925050819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161118c9190611369565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111d35780820151818401526020810190506111b8565b60008484015250505050565b6000601f19601f8301169050919050565b60006111fb82611199565b61120581856111a4565b93506112158185602086016111b5565b61121e816111df565b840191505092915050565b6000602082019050818103600083015261124381846111f0565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061127b82611250565b9050919050565b61128b81611270565b811461129657600080fd5b50565b6000813590506112a881611282565b92915050565b6000819050919050565b6112c1816112ae565b81146112cc57600080fd5b50565b6000813590506112de816112b8565b92915050565b600080604083850312156112fb576112fa61124b565b5b600061130985828601611299565b925050602061131a858286016112cf565b9150509250929050565b60008115159050919050565b61133981611324565b82525050565b60006020820190506113546000830184611330565b92915050565b611363816112ae565b82525050565b600060208201905061137e600083018461135a565b92915050565b60008060006060848603121561139d5761139c61124b565b5b60006113ab86828701611299565b93505060206113bc86828701611299565b92505060406113cd868287016112cf565b9150509250925092565b600060ff82169050919050565b6113ed816113d7565b82525050565b600060208201905061140860008301846113e4565b92915050565b6000602082840312156114245761142361124b565b5b600061143284828501611299565b91505092915050565b61144481611270565b82525050565b600060208201905061145f600083018461143b565b92915050565b6000806040838503121561147c5761147b61124b565b5b600061148a85828601611299565b925050602061149b85828601611299565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806114ec57607f821691505b6020821081036114ff576114fe6114a5565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061153f826112ae565b915061154a836112ae565b925082820390508181111561156257611561611505565b5b92915050565b6000611573826112ae565b915061157e836112ae565b925082820190508082111561159657611595611505565b5b9291505056fea2646970667358221220bf7bc0af0d654a02df63ed34ca0758b469db63c9c746f80000933d207485574c64736f6c63430008120033";

type ERC20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Token__factory extends ContractFactory {
  constructor(...args: ERC20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _decimals: PromiseOrValue<BigNumberish>,
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Token> {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      initialSupply,
      overrides || {}
    ) as Promise<ERC20Token>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _decimals: PromiseOrValue<BigNumberish>,
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      initialSupply,
      overrides || {}
    );
  }
  override attach(address: string): ERC20Token {
    return super.attach(address) as ERC20Token;
  }
  override connect(signer: Signer): ERC20Token__factory {
    return super.connect(signer) as ERC20Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TokenInterface {
    return new utils.Interface(_abi) as ERC20TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Token {
    return new Contract(address, _abi, signerOrProvider) as ERC20Token;
  }
}
