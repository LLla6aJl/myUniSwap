/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type {
  ERC20Token,
  ERC20TokenInterface,
} from "../../../contracts/mytoken.sol/ERC20Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "_decimals",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "initialSupply",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "AllowanceBelowZero",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
    ],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "UpdateDescriptionOnlyOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
    ],
    name: "ZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620027a8380380620027a8833981810160405281019062000037919062000483565b620000536751a8f8108d3eb6a460c01b6200027460201b60201c565b6200006f67a8b4b2d4d7d7d74f60c01b6200027460201b60201c565b836000908162000080919062000774565b506200009d676db2a4c5a4c4749760c01b6200027460201b60201c565b8260019081620000ae919062000774565b50620000cb67bc8df0658b36ae7b60c01b6200027460201b60201c565b81600260006101000a81548160ff021916908360ff1602179055506200010267afa5121aec391fb260c01b6200027460201b60201c565b33600260016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506200015f672e7aec7343e4f74c60c01b6200027460201b60201c565b806005819055506200018267c34c9734ac00794160c01b6200027460201b60201c565b600554600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550620001e46787c38372da1d524f60c01b6200027460201b60201c565b62000200671c858851402e44bd60c01b6200027460201b60201c565b3373ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6005546040516200026291906200086c565b60405180910390a35050505062000889565b50565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620002e08262000295565b810181811067ffffffffffffffff82111715620003025762000301620002a6565b5b80604052505050565b60006200031762000277565b9050620003258282620002d5565b919050565b600067ffffffffffffffff821115620003485762000347620002a6565b5b620003538262000295565b9050602081019050919050565b60005b838110156200038057808201518184015260208101905062000363565b60008484015250505050565b6000620003a36200039d846200032a565b6200030b565b905082815260208101848484011115620003c257620003c162000290565b5b620003cf84828562000360565b509392505050565b600082601f830112620003ef57620003ee6200028b565b5b8151620004018482602086016200038c565b91505092915050565b600060ff82169050919050565b62000422816200040a565b81146200042e57600080fd5b50565b600081519050620004428162000417565b92915050565b6000819050919050565b6200045d8162000448565b81146200046957600080fd5b50565b6000815190506200047d8162000452565b92915050565b60008060008060808587031215620004a0576200049f62000281565b5b600085015167ffffffffffffffff811115620004c157620004c062000286565b5b620004cf87828801620003d7565b945050602085015167ffffffffffffffff811115620004f357620004f262000286565b5b6200050187828801620003d7565b9350506040620005148782880162000431565b925050606062000527878288016200046c565b91505092959194509250565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200058657607f821691505b6020821081036200059c576200059b6200053e565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620006067fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620005c7565b620006128683620005c7565b95508019841693508086168417925050509392505050565b6000819050919050565b6000620006556200064f620006498462000448565b6200062a565b62000448565b9050919050565b6000819050919050565b620006718362000634565b6200068962000680826200065c565b848454620005d4565b825550505050565b600090565b620006a062000691565b620006ad81848462000666565b505050565b5b81811015620006d557620006c960008262000696565b600181019050620006b3565b5050565b601f8211156200072457620006ee81620005a2565b620006f984620005b7565b8101602085101562000709578190505b620007216200071885620005b7565b830182620006b2565b50505b505050565b600082821c905092915050565b6000620007496000198460080262000729565b1980831691505092915050565b600062000764838362000736565b9150826002028217905092915050565b6200077f8262000533565b67ffffffffffffffff8111156200079b576200079a620002a6565b5b620007a782546200056d565b620007b4828285620006d9565b600060209050601f831160018114620007ec5760008415620007d7578287015190505b620007e3858262000756565b86555062000853565b601f198416620007fc86620005a2565b60005b828110156200082657848901518255600182019150602085019450602081019050620007ff565b8683101562000846578489015162000842601f89168262000736565b8355505b6001600288020188555050505b505050505050565b620008668162000448565b82525050565b60006020820190506200088360008301846200085b565b92915050565b611f0f80620008996000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c5780639dc29fac116100665780639dc29fac14610261578063a457c2d71461027d578063a9059cbb146102ad578063dd62ed3e146102dd576100ea565b806370a08231146101f55780638da5cb5b1461022557806395d89b4114610243576100ea565b806323b872dd116100c857806323b872dd1461015b578063313ce5671461018b57806339509351146101a957806340c10f19146101d9576100ea565b806306fdde03146100ef578063095ea7b31461010d57806318160ddd1461013d575b600080fd5b6100f761030d565b6040516101049190611b66565b60405180910390f35b61012760048036038101906101229190611c21565b61039b565b6040516101349190611c7c565b60405180910390f35b610145610416565b6040516101529190611ca6565b60405180910390f35b61017560048036038101906101709190611cc1565b61045c565b6040516101829190611c7c565b60405180910390f35b610193610a0b565b6040516101a09190611d30565b60405180910390f35b6101c360048036038101906101be9190611c21565b610a1e565b6040516101d09190611c7c565b60405180910390f35b6101f360048036038101906101ee9190611c21565b610b20565b005b61020f600480360381019061020a9190611d4b565b610e78565b60405161021c9190611ca6565b60405180910390f35b61022d610efd565b60405161023a9190611d87565b60405180910390f35b61024b610f23565b6040516102589190611b66565b60405180910390f35b61027b60048036038101906102769190611c21565b610fb1565b005b61029760048036038101906102929190611c21565b61134a565b6040516102a49190611c7c565b60405180910390f35b6102c760048036038101906102c29190611c21565b611523565b6040516102d49190611c7c565b60405180910390f35b6102f760048036038101906102f29190611da2565b61159e565b6040516103049190611ca6565b60405180910390f35b6000805461031a90611e11565b80601f016020809104026020016040519081016040528092919081815260200182805461034690611e11565b80156103935780601f1061036857610100808354040283529160200191610393565b820191906000526020600020905b81548152906001019060200180831161037657829003601f168201915b505050505081565b60006103b167c19ab730ec17df1d60c01b611661565b6103c56783099a055642e80560c01b611661565b6103d967b1c774b2bca2d37b60c01b611661565b6103e4338484611664565b6103f86738b22735a10aef6e60c01b611661565b61040c6779edefaeb9977f4a60c01b611661565b6001905092915050565b600061042c67fb41ef8e79064ed860c01b611661565b61044067643ef360e0d6fcd960c01b611661565b610454677bf49da0cafe5e9c60c01b611661565b600554905090565b60006104726775216df8555babef60c01b611661565b610486676580f3f9d9da66af60c01b611661565b61049a67b4cc8a641b635d1b60c01b611661565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610533576104e2677b4072867a85c05960c01b611661565b6104f66765133dbd9a61b41e60c01b611661565b826040517fc80b883400000000000000000000000000000000000000000000000000000000815260040161052a9190611d87565b60405180910390fd5b61054767b6c578a8a424755860c01b611661565b61055b67633abe52b5960de060c01b611661565b61056f675c61b659df119aef60c01b611661565b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561061b576105ca6748e15b0e846c23ca60c01b611661565b6105de67f8320785c599390060c01b611661565b816040517f926653510000000000000000000000000000000000000000000000000000000081526004016106129190611ca6565b60405180910390fd5b61062f671fee5690b225b8ad60c01b611661565b6106436752b7244386ce78c560c01b611661565b61065767b3085a417c65de5a60c01b611661565b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410156107bc576106ef678837761fad64615b60c01b611661565b61070367df647c809e13fffa60c01b611661565b600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040517ff96fb0710000000000000000000000000000000000000000000000000000000081526004016107b39190611ca6565b60405180910390fd5b6107d067fd24b18e00ac2f3660c01b611661565b6107e4671303915a786633b960c01b611661565b81600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546108339190611e71565b9250508190555061084e677cef6e06d426172f60c01b611661565b81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461089d9190611ea5565b925050819055506108b8670c75f0c553a55abf60c01b611661565b81600460008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546109449190611e71565b9250508190555061095f67e53ac5228b0f4fa060c01b611661565b61097367a102bb01d350e29760c01b611661565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516109d09190611ca6565b60405180910390a36109ec67e898ff67ae0d8a4060c01b611661565b610a00677f1f290b74b8b8e560c01b611661565b600190509392505050565b600260009054906101000a900460ff1681565b6000610a34675a84bc5de1a8c8e060c01b611661565b610a4867c03a9f351745e20660c01b611661565b610a5c6788c9509a544126bb60c01b611661565b610aee338484600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ae99190611ea5565b611664565b610b0267b93092be58e3e1f560c01b611661565b610b1667508166932f5a75f560c01b611661565b6001905092915050565b610b34677b54727282df4c5c60c01b611661565b610b486758dbf3318a5b477860c01b611661565b610b5c67d49a176796ab325060c01b611661565b610b70679f6f5bade1c20cfd60c01b611661565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c2a57610bd96723cd6aea13032e1160c01b611661565b610bed67b0bcfcd63897110260c01b611661565b336040517f0a86c02a000000000000000000000000000000000000000000000000000000008152600401610c219190611d87565b60405180910390fd5b610c3e67186a9ed0c720e0a560c01b611661565b610c5267efcdcf7b9fb5141f60c01b611661565b610c6667206e8516e4d2bf0060c01b611661565b610c7a67491f5aec4b5653e360c01b611661565b610c8e6733cf2203c564db1060c01b611661565b610ca267fcc2de631d60cb5260c01b611661565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610d3b57610cea6775e73cc1abda82a160c01b611661565b610cfe6731ddcdde28404ecf60c01b611661565b816040517fc80b8834000000000000000000000000000000000000000000000000000000008152600401610d329190611d87565b60405180910390fd5b610d4f67e670161e4d4d27e860c01b611661565b610d636729f6771718e9885760c01b611661565b8060056000828254610d759190611ea5565b92505081905550610d9067d1fbb646abe1376f60c01b611661565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610ddf9190611ea5565b92505081905550610dfa67c378e79bbc44ccc260c01b611661565b610e0e6774860c60e537dc9b60c01b611661565b8173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e6c9190611ca6565b60405180910390a35050565b6000610e8e6721db41cd7ef0615860c01b611661565b610ea267a11be23565ef401c60c01b611661565b610eb667cc478fd88a9eeecd60c01b611661565b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60018054610f3090611e11565b80601f0160208091040260200160405190810160405280929190818152602001828054610f5c90611e11565b8015610fa95780601f10610f7e57610100808354040283529160200191610fa9565b820191906000526020600020905b815481529060010190602001808311610f8c57829003601f168201915b505050505081565b610fc567678e8c6b8b4966f160c01b611661565b610fd96758dbf3318a5b477860c01b611661565b610fed67d49a176796ab325060c01b611661565b611001679f6f5bade1c20cfd60c01b611661565b600260019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146110bb5761106a6723cd6aea13032e1160c01b611661565b61107e67b0bcfcd63897110260c01b611661565b336040517f0a86c02a0000000000000000000000000000000000000000000000000000000081526004016110b29190611d87565b60405180910390fd5b6110cf67186a9ed0c720e0a560c01b611661565b6110e367efcdcf7b9fb5141f60c01b611661565b6110f767584242712e6d0c9f60c01b611661565b61110b67efced7b9024290e360c01b611661565b61111f67145ed06667b459d460c01b611661565b611133678e9bdbbcc2444d2b60c01b611661565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905061118b677b9a131dc1af300b60c01b611661565b61119f6753d8c09839c0a9e260c01b611661565b8181101561120c576111bb67211d6d7294a3b14a60c01b611661565b6111cf67fa5ae331af2cbdc360c01b611661565b816040517f926653510000000000000000000000000000000000000000000000000000000081526004016112039190611ca6565b60405180910390fd5b6112206719a954a066460f6460c01b611661565b611234679866b84b7297615260c01b611661565b81600560008282546112469190611e71565b9250508190555061126167e33f2c3fcfdbd37d60c01b611661565b81600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546112b09190611e71565b925050819055506112cb67af44d2f2e9a980cf60c01b611661565b6112df67a816e09972ec9f6360c01b611661565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161133d9190611ca6565b60405180910390a3505050565b600061136067c46dfaf88938ef7c60c01b611661565b61137467c0e5f10cbe51b40d60c01b611661565b61138867a977312b793e1c1060c01b611661565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905061141d6737f7d1ddadc0c57a60c01b611661565b611431670d3616921f0b569460c01b611661565b8083111561149e5761144d67b7169e67753c50f960c01b611661565b61146167c07c2d11b32322f560c01b611661565b826040517f97eff9390000000000000000000000000000000000000000000000000000000081526004016114959190611ca6565b60405180910390fd5b6114b26726ba4c9d2d48a4e160c01b611661565b6114c6678e5d782396d577d160c01b611661565b6114da67ee52f2c98d82312760c01b611661565b6114f0338585846114eb9190611e71565b611664565b6115046739bb3772cfc3898260c01b611661565b61151867ad480bea867ae4be60c01b611661565b600191505092915050565b600061153967aab2906d8eb5c03e60c01b611661565b61154d67412ad983834fdce260c01b611661565b6115616722fd9597f5719c5360c01b611661565b61156c33848461179f565b61158067e227ff845903335a60c01b611661565b611594672839b94ac915453860c01b611661565b6001905092915050565b60006115b467a3a361881ef98abc60c01b611661565b6115c867291b4eb647bb3ce060c01b611661565b6115dc67dcb75be504f5c51c60c01b611661565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b50565b611678676a5b07e59c614d8a60c01b611661565b61168c67164b8be36bea40d460c01b611661565b80600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555061172167d3e8010f78c4ee5560c01b611661565b61173567941335e2f1e8e9e560c01b611661565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516117929190611ca6565b60405180910390a3505050565b6117b367ac56b74879f9350a60c01b611661565b6117c767a87a19ff8c805f8c60c01b611661565b6117db677c52d0b87793af5e60c01b611661565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118745761182367a512441ae2e5278b60c01b611661565b611837678b3179b34e698c8460c01b611661565b816040517fc80b883400000000000000000000000000000000000000000000000000000000815260040161186b9190611d87565b60405180910390fd5b611888673d40cd5f8c12714260c01b611661565b61189c6730e7f5bce270f1c160c01b611661565b6118b0678f889d43fb6e5c5060c01b611661565b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054101561195c5761190b67c9da2b31c888bfa160c01b611661565b61191f67ed317bffde711e5060c01b611661565b806040517f926653510000000000000000000000000000000000000000000000000000000081526004016119539190611ca6565b60405180910390fd5b61197067306742cb56f7fbb560c01b611661565b6119846756378c3fe1d9bcaf60c01b611661565b80600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546119d39190611e71565b925050819055506119ee670a73fea996fc74c560c01b611661565b80600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254611a3d9190611ea5565b92505081905550611a5867de0dc9ae786f62a460c01b611661565b611a6c67deb503fea256d43160c01b611661565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611ac99190611ca6565b60405180910390a3505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611b10578082015181840152602081019050611af5565b60008484015250505050565b6000601f19601f8301169050919050565b6000611b3882611ad6565b611b428185611ae1565b9350611b52818560208601611af2565b611b5b81611b1c565b840191505092915050565b60006020820190508181036000830152611b808184611b2d565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611bb882611b8d565b9050919050565b611bc881611bad565b8114611bd357600080fd5b50565b600081359050611be581611bbf565b92915050565b6000819050919050565b611bfe81611beb565b8114611c0957600080fd5b50565b600081359050611c1b81611bf5565b92915050565b60008060408385031215611c3857611c37611b88565b5b6000611c4685828601611bd6565b9250506020611c5785828601611c0c565b9150509250929050565b60008115159050919050565b611c7681611c61565b82525050565b6000602082019050611c916000830184611c6d565b92915050565b611ca081611beb565b82525050565b6000602082019050611cbb6000830184611c97565b92915050565b600080600060608486031215611cda57611cd9611b88565b5b6000611ce886828701611bd6565b9350506020611cf986828701611bd6565b9250506040611d0a86828701611c0c565b9150509250925092565b600060ff82169050919050565b611d2a81611d14565b82525050565b6000602082019050611d456000830184611d21565b92915050565b600060208284031215611d6157611d60611b88565b5b6000611d6f84828501611bd6565b91505092915050565b611d8181611bad565b82525050565b6000602082019050611d9c6000830184611d78565b92915050565b60008060408385031215611db957611db8611b88565b5b6000611dc785828601611bd6565b9250506020611dd885828601611bd6565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680611e2957607f821691505b602082108103611e3c57611e3b611de2565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611e7c82611beb565b9150611e8783611beb565b9250828203905081811115611e9f57611e9e611e42565b5b92915050565b6000611eb082611beb565b9150611ebb83611beb565b9250828201905080821115611ed357611ed2611e42565b5b9291505056fea26469706673582212206b9c24b2441199c9f3391d8fd0c9564e080e11407fbda8fe3e327716c317ceaf64736f6c63430008120033";

type ERC20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Token__factory extends ContractFactory {
  constructor(...args: ERC20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _decimals: PromiseOrValue<BigNumberish>,
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC20Token> {
    return super.deploy(
      _name,
      _symbol,
      _decimals,
      initialSupply,
      overrides || {}
    ) as Promise<ERC20Token>;
  }
  override getDeployTransaction(
    _name: PromiseOrValue<string>,
    _symbol: PromiseOrValue<string>,
    _decimals: PromiseOrValue<BigNumberish>,
    initialSupply: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _name,
      _symbol,
      _decimals,
      initialSupply,
      overrides || {}
    );
  }
  override attach(address: string): ERC20Token {
    return super.attach(address) as ERC20Token;
  }
  override connect(signer: Signer): ERC20Token__factory {
    return super.connect(signer) as ERC20Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TokenInterface {
    return new utils.Interface(_abi) as ERC20TokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Token {
    return new Contract(address, _abi, signerOrProvider) as ERC20Token;
  }
}
